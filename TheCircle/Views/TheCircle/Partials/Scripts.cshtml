<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha384-xBuQ/xzmlsLoJpyjoggmTEz8OWUFM0/RC5BsqQBDX2v5cMvDHcMakNTNrHIW2I5f" crossorigin="anonymous"></script>
<script src="~/scripts/ripple.js"> </script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<script src="~/scripts/vendor/select2.min.js"></script>
<script src="~/scripts/vendor/wiseboard/admin.min.js"></script>
<!--<script src="~/scripts/vendor/angular.min.js"></script>-->
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.5/angular.min.js" integrity="sha512-G3f4ozX321Jq60/AqV9lggSZsrl8IVsxwi9z/ww1/DkV4rTczx/DLkufIl48VgRdzDYadFBSGJGXptGS1XM0Qw==" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angular-ui-router/1.0.0-rc.1/angular-ui-router.min.js" integrity="sha512-6LN8tj8yCgkkD/Qx8RIxP4ms6CFFZV5oNYVSNBus204HIZPE8hvauawqiePFw6g5Oes7mzIzkwncONo2yX4UDg==" crossorigin="anonymous"></script>
<!--<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.5/angular-cookies.min.js" integrity="sha384-zoGJ6ldirItV+3dBoFKCK7PIIjTKNBrhc9ersyF8+8tm5v3w9JXE3mXQH3f+uJXw" crossorigin="anonymous"></script>-->
<script src="~/scripts/vendor/bootstrap-notify.min.js"></script>
<!--<script src="~/scripts/vendor/pdfmake.min.js"></script>-->
<!--<script src="~/scripts/vendor/vfs_fonts.js"></script>-->
<script src="~/scripts/vendor/nprogress.js"></script>
<script>

    //Comment this for debug
    /*var console = {
        log: function () { 
            return "Production mode, comment this for debug"
        }        
    }*/

    //retorna la fecha en un formato especifico
    function date(date) {
        var format = new Date(date);
        var day = format.getDate();
        var month = format.getMonth() + 1;
        var year = format.getFullYear();

        return day + '/' + month + '/' + year;
    }

    //Ejecuta una funcion cada cierto tiempo y detenerla cuando se requiera.
    var refresh = {
        go: function (fn, time) { //time, minutos
            fn();
            if (time) {
                console.log("Go refresh for", fn.name, "by", time, "min");
                return setInterval(fn, time * 1000 * 60);
            }
            console.log("Go refresh for", fn.name);
            return setInterval(fn, 1000 * 30);
        },
        stop: function (repeater) {
            clearInterval(repeater);
        }
    }

    //Notificaciones bootstrap
    function notify(mensaje, tipo, progress) {
        return $.notify(
            {
                icon: (function () {
                    switch (tipo) {
                        case "success":
                            return "glyphicon glyphicon-saved"
                        case "danger":
                            return "glyphicon glyphicon-ban-circle"
                        default:
                            return ""
                    }
                })(),
                message: mensaje,
                url: '#',
                target: '_blank'
            }, {
                element: 'body',
                position: null,
                showProgressbar: (function () {
                    if (progress) {
                        return progress
                    } return false
                })(),
                type: tipo,
                allow_dismiss: true,
                newest_on_top: false,
                placement: {
                    from: "top",
                    align: "right"
                },
                offset: { x: 20, y: 70 },
                spacing: 10,
                z_index: 1031,
                delay: 1000,
                timer: 1000,
                url_target: '_blank',
                mouse_over: "pause",
                animate: {
                    enter: 'animated bounceIn',
                    exit: 'animated bounceOut'
                },
                onShow: null,
                onShown: null,
                onClose: null,
                onClosed: null,
                icon_type: 'class'
            })
    }

    //Funcion que comprueba si la sessión es valida o no, caso contrario redireccion al login
    //Es llamada en la seccion .run de las apps de angularJS
    function checkSession($http) { 
        refresh.go(function () {
            $http.get("session").then(function () { console.log("Session valida") }, function (response) {
                if (response.status === 401) {
                    alert("Su sesion ha caducado");
                    document.location.replace('/login');
                }
            })
        }, 20) //minutos
    }

    //Funcion que precarga todos los templates de la pagina inicial
    //Es llamada en la seccion .run de las apps de angularJS
    function loadTemplates($state, goState, $http, $templateCache) { 
        var promises = []
        var states = $state.get()
        NProgress.start()

        for (i = 1; i < states.length; i++) {
            var p = $http.get(states[i].templateUrl, { cache: $templateCache })
            promises.push(p)
            p.then(function () { }, function (error) { console.log("Error template: ", error) })
        }

        Promise.all(promises)
            .then(function () { }).catch(function () { }).then(function () {
                NProgress.done()
                $state.go(goState) ///////////////////////// State inicial
            })
    }


    //obj.nombre = nombre del pdf, obj.data = [array de los items de receta con 4 columnas]
    /*function PDFexport(obj) {
        function body(items) {
            var body = [
                [
                    { text: 'Cantidad', style: 'subItem' },
                    { text: 'Nombre', style: 'subItem' },
                    { text: 'Compuesto', style: 'subItem' },
                    { text: 'Posologia', style: 'subItem' }
                ]
            ]

            items.forEach(function (item) {
                body.push(
                    [
                        { text: " " + item.cantidad },
                        { text: " " + item.nombre },
                        { text: " " + item.compuesto },
                        { text: " " + item.posologia }
                    ]
                )
            })
            return body;
        }

        var pdf = {
            content: [
                { text: "Children international", style: 'header' },
                { text: "Receta de farmacia apadrinado\n\n", style: 'subheader' },
                {
                    text: [
                        {
                            text: "Fecha: ",
                            style: 'subItem'
                        }, {
                            text: date(new Date()) + "\n"
                        }, {
                            text: "Tipo: ",
                            style: 'subItem'
                        }, {
                            text: "tipo" + "\n\n"
                        }
                    ]
                },
                {
                    columns: [
                        { width: '*', text: '' },
                        {
                            width: '100%',
                            table: {
                                widths: ['auto', '*', '*', '*'],
                                body: body(obj.data)
                            }
                        },
                        { width: '*', text: '' }
                    ]
                }
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    alignment: 'center',
                    color: 'blue'
                },
                subheader: {
                    fontSize: 14,
                    bold: true,
                    alignment: 'center',
                    color: 'blue'
                },
                subItem: {
                    bold: true,
                    color: 'blue'
                },
                tableHeader: {
                    bold: true,
                    fontSize: 13,
                    color: 'black'
                }
            }
        }

        pdfMake.createPdf(pdf).download(obj.nombre)
    }*/

    /*var obj = {
        nombre: "impresion.pdf",
        data: [
            { cantidad: 12, nombre: "paracetamol", compuesto: "paracetamol 1g", posologia: "Tomar una cada 12 horas" },
            { cantidad: 50, nombre: "asdas", compuesto: "paracetaasdasdmol 1g", posologia: "Tomar una cada 13 horas" },
            { cantidad: 10, nombre: "paracetaasadassdmol", compuesto: "asdas 1g", posologia: "Tomar una cada 14 horas" }
        ]
    }*/

    //PDFexport(obj);
</script>